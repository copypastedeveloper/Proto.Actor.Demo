// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages.Commands {

  /// <summary>Holder for reflection information generated from commands.proto</summary>
  public static partial class CommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for commands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jb21tYW5kcy5wcm90bxIIY29tbWFuZHMiLwoKQ3JlYXRlVG9kbxIMCgRO",
            "YW1lGAEgASgJEhMKC0FnZ3JlZ2F0ZUlkGAIgASgJIiMKDENvbXBsZXRlVG9k",
            "bxITCgtBZ2dyZWdhdGVJZBgCIAEoCUIUqgIRTWVzc2FnZXMuQ29tbWFuZHNi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Commands.CreateTodo), global::Messages.Commands.CreateTodo.Parser, new[]{ "Name", "AggregateId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Commands.CompleteTodo), global::Messages.Commands.CompleteTodo.Parser, new[]{ "AggregateId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreateTodo : pb::IMessage<CreateTodo> {
    private static readonly pb::MessageParser<CreateTodo> _parser = new pb::MessageParser<CreateTodo>(() => new CreateTodo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.Commands.CommandsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo(CreateTodo other) : this() {
      name_ = other.name_;
      aggregateId_ = other.aggregateId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo Clone() {
      return new CreateTodo(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AggregateId" field.</summary>
    public const int AggregateIdFieldNumber = 2;
    private string aggregateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AggregateId {
      get { return aggregateId_; }
      set {
        aggregateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (AggregateId != other.AggregateId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AggregateId.Length != 0) hash ^= AggregateId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (AggregateId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AggregateId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AggregateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AggregateId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AggregateId.Length != 0) {
        AggregateId = other.AggregateId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            AggregateId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompleteTodo : pb::IMessage<CompleteTodo> {
    private static readonly pb::MessageParser<CompleteTodo> _parser = new pb::MessageParser<CompleteTodo>(() => new CompleteTodo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.Commands.CommandsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteTodo(CompleteTodo other) : this() {
      aggregateId_ = other.aggregateId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteTodo Clone() {
      return new CompleteTodo(this);
    }

    /// <summary>Field number for the "AggregateId" field.</summary>
    public const int AggregateIdFieldNumber = 2;
    private string aggregateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AggregateId {
      get { return aggregateId_; }
      set {
        aggregateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AggregateId != other.AggregateId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AggregateId.Length != 0) hash ^= AggregateId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AggregateId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AggregateId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AggregateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AggregateId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteTodo other) {
      if (other == null) {
        return;
      }
      if (other.AggregateId.Length != 0) {
        AggregateId = other.AggregateId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            AggregateId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
